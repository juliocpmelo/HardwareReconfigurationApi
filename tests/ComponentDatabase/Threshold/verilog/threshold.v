// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2012.4
// Copyright (C) 2012 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="threshold,hls_ip_2012_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc5vlx110tff1136-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.835250,HLS_SYN_LAT=9,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=82,HLS_SYN_LUT=274}" *)

module threshold (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mode,
        thresholdTable_pos,
        pixel,
        out_r,
        out_r_ap_vld
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] mode;
input  [23:0] thresholdTable_pos;
input  [23:0] pixel;
output  [23:0] out_r;
output   out_r_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[23:0] out_r;
reg out_r_ap_vld;
reg   [2:0] ap_CS_fsm = 3'b000;
reg   [3:0] limiarTable_c1_address0;
reg    limiarTable_c1_ce0;
reg    limiarTable_c1_we0;
wire   [23:0] limiarTable_c1_d0;
wire   [23:0] limiarTable_c1_q0;
reg   [3:0] limiarTable_c2_address0;
reg    limiarTable_c2_ce0;
reg    limiarTable_c2_we0;
wire   [15:0] limiarTable_c2_d0;
wire   [15:0] limiarTable_c2_q0;
reg   [3:0] limiarTable_c3_address0;
reg    limiarTable_c3_ce0;
reg    limiarTable_c3_we0;
wire   [7:0] limiarTable_c3_d0;
wire   [7:0] limiarTable_c3_q0;
wire   [0:0] tmp_fu_163_p2;
reg   [0:0] tmp_reg_312;
wire   [0:0] tmp_5_fu_169_p2;
reg   [0:0] tmp_5_reg_316;
wire   [24:0] tmp_12_cast_fu_185_p1;
reg   [24:0] tmp_12_cast_reg_320;
wire   [17:0] tmp_19_cast_cast2_fu_189_p1;
reg   [17:0] tmp_19_cast_cast2_reg_326;
wire   [16:0] tmp_19_cast_cast_fu_193_p1;
reg   [16:0] tmp_19_cast_cast_reg_331;
wire   [3:0] tmp_16_fu_226_p2;
reg   [3:0] tmp_16_reg_339;
wire   [31:0] tmp_9_fu_232_p1;
reg   [31:0] tmp_9_reg_348;
wire   [0:0] exitcond_fu_220_p2;
reg   [23:0] limiarTable_c1_load_reg_359;
wire   [0:0] tmp_4_fu_247_p2;
wire   [0:0] tmp_10_fu_258_p2;
wire   [23:0] extLd_fu_263_p1;
reg   [23:0] extLd_reg_375;
wire   [0:0] tmp_12_fu_277_p2;
wire   [0:0] tmp_14_fu_292_p2;
reg   [3:0] i_load_reg_136;
wire   [31:0] tmp_1_fu_197_p1;
wire   [23:0] tmp_15_fu_306_p2;
wire   [23:0] grp_fu_156_p2;
wire   [15:0] pixel_cast4_fu_175_p1;
wire   [15:0] tmp_7_fu_179_p2;
wire   [15:0] pixel_cast6_fu_204_p1;
wire   [24:0] tmp_s_fu_241_p0;
wire   [24:0] minbit_trunc_fu_237_p1;
wire   [24:0] tmp_s_fu_241_p2;
wire   [24:0] tmp_8_fu_252_p0;
wire   [24:0] tmp_8_fu_252_p2;
wire   [16:0] minbit_trunc7_cast_fu_267_p1;
wire   [16:0] tmp_11_fu_271_p2;
wire   [16:0] tmp_13_fu_282_p2;
wire   [17:0] tmp_14_fu_292_p0;
wire   [23:0] extLd1_fu_297_p1;
wire   [23:0] tmp2_fu_301_p2;
reg   [2:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b000;
parameter    ap_ST_st2_fsm_1 = 3'b001;
parameter    ap_ST_st3_fsm_2 = 3'b010;
parameter    ap_ST_st4_fsm_3 = 3'b011;
parameter    ap_ST_st5_fsm_4 = 3'b100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv24_0 = 24'b000000000000000000000000;
parameter    ap_const_lv24_FF0000 = 24'b111111110000000000000000;
parameter    ap_const_lv8_1 = 8'b00000001;
parameter    ap_const_lv8_2 = 8'b00000010;
parameter    ap_const_lv16_FF00 = 16'b1111111100000000;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_1 = 4'b0001;
parameter    ap_const_lv25_4 = 25'b0000000000000000000000100;
parameter    ap_const_lv25_1FFFFFC = 25'b1111111111111111111111100;
parameter    ap_const_lv17_400 = 17'b00000010000000000;
parameter    ap_const_lv17_1FC00 = 17'b11111110000000000;
parameter    ap_true = 1'b1;


threshold_limiarTable_c1 #(
    .DataWidth( 24 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
limiarTable_c1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( limiarTable_c1_address0 ),
    .ce0( limiarTable_c1_ce0 ),
    .we0( limiarTable_c1_we0 ),
    .d0( limiarTable_c1_d0 ),
    .q0( limiarTable_c1_q0 )
);

threshold_limiarTable_c2 #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
limiarTable_c2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( limiarTable_c2_address0 ),
    .ce0( limiarTable_c2_ce0 ),
    .we0( limiarTable_c2_we0 ),
    .d0( limiarTable_c2_d0 ),
    .q0( limiarTable_c2_q0 )
);

threshold_limiarTable_c3 #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
limiarTable_c3_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( limiarTable_c3_address0 ),
    .ce0( limiarTable_c3_ce0 ),
    .we0( limiarTable_c3_we0 ),
    .d0( limiarTable_c3_d0 ),
    .q0( limiarTable_c3_q0 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        extLd_reg_375[0] <= extLd_fu_263_p1[0];
        extLd_reg_375[1] <= extLd_fu_263_p1[1];
        extLd_reg_375[2] <= extLd_fu_263_p1[2];
        extLd_reg_375[3] <= extLd_fu_263_p1[3];
        extLd_reg_375[4] <= extLd_fu_263_p1[4];
        extLd_reg_375[5] <= extLd_fu_263_p1[5];
        extLd_reg_375[6] <= extLd_fu_263_p1[6];
        extLd_reg_375[7] <= extLd_fu_263_p1[7];
        extLd_reg_375[8] <= extLd_fu_263_p1[8];
        extLd_reg_375[9] <= extLd_fu_263_p1[9];
        extLd_reg_375[10] <= extLd_fu_263_p1[10];
        extLd_reg_375[11] <= extLd_fu_263_p1[11];
        extLd_reg_375[12] <= extLd_fu_263_p1[12];
        extLd_reg_375[13] <= extLd_fu_263_p1[13];
        extLd_reg_375[14] <= extLd_fu_263_p1[14];
        extLd_reg_375[15] <= extLd_fu_263_p1[15];
    end
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_12_fu_277_p2) & ~(ap_const_lv1_0 == tmp_14_fu_292_p2)) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_12_fu_277_p2)) | ((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_4_fu_247_p2) & ~(ap_const_lv1_0 == tmp_10_fu_258_p2)) | ((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_4_fu_247_p2)))) begin
        i_load_reg_136 <= tmp_16_reg_339;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (tmp_fu_163_p2 == ap_const_lv1_0) & ~(tmp_5_fu_169_p2 == ap_const_lv1_0))) begin
        i_load_reg_136 <= ap_const_lv4_0;
    end
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        limiarTable_c1_load_reg_359 <= limiarTable_c1_q0;
    end
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (tmp_fu_163_p2 == ap_const_lv1_0) & ~(tmp_5_fu_169_p2 == ap_const_lv1_0))) begin
        tmp_12_cast_reg_320[16] <= tmp_12_cast_fu_185_p1[16];
        tmp_12_cast_reg_320[17] <= tmp_12_cast_fu_185_p1[17];
        tmp_12_cast_reg_320[18] <= tmp_12_cast_fu_185_p1[18];
        tmp_12_cast_reg_320[19] <= tmp_12_cast_fu_185_p1[19];
        tmp_12_cast_reg_320[20] <= tmp_12_cast_fu_185_p1[20];
        tmp_12_cast_reg_320[21] <= tmp_12_cast_fu_185_p1[21];
        tmp_12_cast_reg_320[22] <= tmp_12_cast_fu_185_p1[22];
        tmp_12_cast_reg_320[23] <= tmp_12_cast_fu_185_p1[23];
        tmp_12_cast_reg_320[24] <= tmp_12_cast_fu_185_p1[24];
    end
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (tmp_reg_312 == ap_const_lv1_0) & ~(tmp_5_reg_316 == ap_const_lv1_0))) begin
        tmp_16_reg_339 <= tmp_16_fu_226_p2;
    end
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (tmp_fu_163_p2 == ap_const_lv1_0) & ~(tmp_5_fu_169_p2 == ap_const_lv1_0))) begin
        tmp_19_cast_cast2_reg_326[8] <= tmp_19_cast_cast2_fu_189_p1[8];
        tmp_19_cast_cast2_reg_326[9] <= tmp_19_cast_cast2_fu_189_p1[9];
        tmp_19_cast_cast2_reg_326[10] <= tmp_19_cast_cast2_fu_189_p1[10];
        tmp_19_cast_cast2_reg_326[11] <= tmp_19_cast_cast2_fu_189_p1[11];
        tmp_19_cast_cast2_reg_326[12] <= tmp_19_cast_cast2_fu_189_p1[12];
        tmp_19_cast_cast2_reg_326[13] <= tmp_19_cast_cast2_fu_189_p1[13];
        tmp_19_cast_cast2_reg_326[14] <= tmp_19_cast_cast2_fu_189_p1[14];
        tmp_19_cast_cast2_reg_326[15] <= tmp_19_cast_cast2_fu_189_p1[15];
    end
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (tmp_fu_163_p2 == ap_const_lv1_0) & ~(tmp_5_fu_169_p2 == ap_const_lv1_0))) begin
        tmp_19_cast_cast_reg_331[8] <= tmp_19_cast_cast_fu_193_p1[8];
        tmp_19_cast_cast_reg_331[9] <= tmp_19_cast_cast_fu_193_p1[9];
        tmp_19_cast_cast_reg_331[10] <= tmp_19_cast_cast_fu_193_p1[10];
        tmp_19_cast_cast_reg_331[11] <= tmp_19_cast_cast_fu_193_p1[11];
        tmp_19_cast_cast_reg_331[12] <= tmp_19_cast_cast_fu_193_p1[12];
        tmp_19_cast_cast_reg_331[13] <= tmp_19_cast_cast_fu_193_p1[13];
        tmp_19_cast_cast_reg_331[14] <= tmp_19_cast_cast_fu_193_p1[14];
        tmp_19_cast_cast_reg_331[15] <= tmp_19_cast_cast_fu_193_p1[15];
    end
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (tmp_fu_163_p2 == ap_const_lv1_0))) begin
        tmp_5_reg_316 <= tmp_5_fu_169_p2;
    end
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (tmp_reg_312 == ap_const_lv1_0) & ~(tmp_5_reg_316 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond_fu_220_p2))) begin
        tmp_9_reg_348[0] <= tmp_9_fu_232_p1[0];
        tmp_9_reg_348[1] <= tmp_9_fu_232_p1[1];
        tmp_9_reg_348[2] <= tmp_9_fu_232_p1[2];
        tmp_9_reg_348[3] <= tmp_9_fu_232_p1[3];
    end
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        tmp_reg_312 <= tmp_fu_163_p2;
    end
end

/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_reg_312 or tmp_5_reg_316 or exitcond_fu_220_p2 or tmp_4_fu_247_p2 or tmp_10_fu_258_p2 or tmp_12_fu_277_p2 or tmp_14_fu_292_p2)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_12_fu_277_p2) & (ap_const_lv1_0 == tmp_14_fu_292_p2))) begin
        ap_NS_fsm = ap_ST_st5_fsm_4;
    end else if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_4_fu_247_p2) & (ap_const_lv1_0 == tmp_10_fu_258_p2))) begin
        ap_NS_fsm = ap_ST_st4_fsm_3;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ((tmp_5_reg_316 == ap_const_lv1_0) | ~(tmp_reg_312 == ap_const_lv1_0) | ~(ap_const_lv1_0 == exitcond_fu_220_p2)))) begin
        ap_NS_fsm = ap_ST_st1_fsm_0;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (tmp_reg_312 == ap_const_lv1_0) & ~(tmp_5_reg_316 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond_fu_220_p2))) begin
        ap_NS_fsm = ap_ST_st3_fsm_2;
    end else if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | ((ap_ST_st3_fsm_2 == ap_CS_fsm) & (~(ap_const_lv1_0 == tmp_10_fu_258_p2) | ~(ap_const_lv1_0 == tmp_4_fu_247_p2))) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (~(ap_const_lv1_0 == tmp_14_fu_292_p2) | ~(ap_const_lv1_0 == tmp_12_fu_277_p2))))) begin
        ap_NS_fsm = ap_ST_st2_fsm_1;
    end else begin
        ap_NS_fsm = ap_CS_fsm;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm or tmp_reg_312 or tmp_5_reg_316 or exitcond_fu_220_p2)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ((tmp_5_reg_316 == ap_const_lv1_0) | ~(tmp_reg_312 == ap_const_lv1_0) | ~(ap_const_lv1_0 == exitcond_fu_220_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or tmp_reg_312 or tmp_5_reg_316 or exitcond_fu_220_p2)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ((tmp_5_reg_316 == ap_const_lv1_0) | ~(tmp_reg_312 == ap_const_lv1_0) | ~(ap_const_lv1_0 == exitcond_fu_220_p2)))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// limiarTable_c1_address0 assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_163_p2 or tmp_reg_312 or tmp_5_reg_316 or tmp_9_fu_232_p1 or exitcond_fu_220_p2 or tmp_1_fu_197_p1)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_163_p2 == ap_const_lv1_0))) begin
        limiarTable_c1_address0 = tmp_1_fu_197_p1;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (tmp_reg_312 == ap_const_lv1_0) & ~(tmp_5_reg_316 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond_fu_220_p2))) begin
        limiarTable_c1_address0 = tmp_9_fu_232_p1;
    end else begin
        limiarTable_c1_address0 = tmp_1_fu_197_p1;
    end
end

/// limiarTable_c1_ce0 assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_163_p2 or tmp_reg_312 or tmp_5_reg_316 or exitcond_fu_220_p2)
begin
    if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & (tmp_reg_312 == ap_const_lv1_0) & ~(tmp_5_reg_316 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond_fu_220_p2)) | ((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_163_p2 == ap_const_lv1_0)))) begin
        limiarTable_c1_ce0 = ap_const_logic_1;
    end else begin
        limiarTable_c1_ce0 = ap_const_logic_0;
    end
end

/// limiarTable_c1_we0 assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_163_p2)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_163_p2 == ap_const_lv1_0))) begin
        limiarTable_c1_we0 = ap_const_logic_1;
    end else begin
        limiarTable_c1_we0 = ap_const_logic_0;
    end
end

/// limiarTable_c2_address0 assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_163_p2 or tmp_9_reg_348 or tmp_4_fu_247_p2 or tmp_10_fu_258_p2 or tmp_1_fu_197_p1)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_163_p2 == ap_const_lv1_0))) begin
        limiarTable_c2_address0 = tmp_1_fu_197_p1;
    end else if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_4_fu_247_p2) & (ap_const_lv1_0 == tmp_10_fu_258_p2))) begin
        limiarTable_c2_address0 = tmp_9_reg_348;
    end else begin
        limiarTable_c2_address0 = tmp_1_fu_197_p1;
    end
end

/// limiarTable_c2_ce0 assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_163_p2 or tmp_4_fu_247_p2 or tmp_10_fu_258_p2)
begin
    if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_4_fu_247_p2) & (ap_const_lv1_0 == tmp_10_fu_258_p2)) | ((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_163_p2 == ap_const_lv1_0)))) begin
        limiarTable_c2_ce0 = ap_const_logic_1;
    end else begin
        limiarTable_c2_ce0 = ap_const_logic_0;
    end
end

/// limiarTable_c2_we0 assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_163_p2)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_163_p2 == ap_const_lv1_0))) begin
        limiarTable_c2_we0 = ap_const_logic_1;
    end else begin
        limiarTable_c2_we0 = ap_const_logic_0;
    end
end

/// limiarTable_c3_address0 assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_163_p2 or tmp_9_reg_348 or tmp_12_fu_277_p2 or tmp_14_fu_292_p2 or tmp_1_fu_197_p1)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_163_p2 == ap_const_lv1_0))) begin
        limiarTable_c3_address0 = tmp_1_fu_197_p1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_12_fu_277_p2) & (ap_const_lv1_0 == tmp_14_fu_292_p2))) begin
        limiarTable_c3_address0 = tmp_9_reg_348;
    end else begin
        limiarTable_c3_address0 = tmp_1_fu_197_p1;
    end
end

/// limiarTable_c3_ce0 assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_163_p2 or tmp_12_fu_277_p2 or tmp_14_fu_292_p2)
begin
    if ((((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_12_fu_277_p2) & (ap_const_lv1_0 == tmp_14_fu_292_p2)) | ((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_163_p2 == ap_const_lv1_0)))) begin
        limiarTable_c3_ce0 = ap_const_logic_1;
    end else begin
        limiarTable_c3_ce0 = ap_const_logic_0;
    end
end

/// limiarTable_c3_we0 assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_163_p2)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(tmp_fu_163_p2 == ap_const_lv1_0))) begin
        limiarTable_c3_we0 = ap_const_logic_1;
    end else begin
        limiarTable_c3_we0 = ap_const_logic_0;
    end
end

/// out_r assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_163_p2 or tmp_15_fu_306_p2)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        out_r = tmp_15_fu_306_p2;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (tmp_fu_163_p2 == ap_const_lv1_0))) begin
        out_r = ap_const_lv24_0;
    end else begin
        out_r = tmp_15_fu_306_p2;
    end
end

/// out_r_ap_vld assign process. ///
always @ (ap_start or ap_CS_fsm or tmp_fu_163_p2)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (tmp_fu_163_p2 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm))) begin
        out_r_ap_vld = ap_const_logic_1;
    end else begin
        out_r_ap_vld = ap_const_logic_0;
    end
end
assign exitcond_fu_220_p2 = (i_load_reg_136 == ap_const_lv4_A? 1'b1: 1'b0);
assign extLd1_fu_297_p1 = $unsigned(limiarTable_c3_q0);
assign extLd_fu_263_p1 = $unsigned(limiarTable_c2_q0);
assign grp_fu_156_p2 = (pixel & ap_const_lv24_FF0000);
assign limiarTable_c1_d0 = grp_fu_156_p2;
assign limiarTable_c2_d0 = (pixel_cast6_fu_204_p1 & ap_const_lv16_FF00);
assign limiarTable_c3_d0 = pixel[7:0];
assign minbit_trunc7_cast_fu_267_p1 = $unsigned(limiarTable_c2_q0);
assign minbit_trunc_fu_237_p1 = $signed(limiarTable_c1_q0);
assign pixel_cast4_fu_175_p1 = pixel[15:0];
assign pixel_cast6_fu_204_p1 = pixel[15:0];
assign tmp2_fu_301_p2 = (limiarTable_c1_load_reg_359 | extLd1_fu_297_p1);
assign tmp_10_fu_258_p2 = ($signed(tmp_8_fu_252_p2) > $signed(tmp_12_cast_reg_320)? 1'b1: 1'b0);
assign tmp_11_fu_271_p2 = (minbit_trunc7_cast_fu_267_p1 + ap_const_lv17_400);
assign tmp_12_cast_fu_185_p1 = $signed(grp_fu_156_p2);
assign tmp_12_fu_277_p2 = (tmp_11_fu_271_p2 < tmp_19_cast_cast_reg_331? 1'b1: 1'b0);
assign tmp_13_fu_282_p2 = (minbit_trunc7_cast_fu_267_p1 + ap_const_lv17_1FC00);
assign tmp_14_fu_292_p0 = $signed(tmp_13_fu_282_p2);
assign tmp_14_fu_292_p2 = ($signed(tmp_14_fu_292_p0) > $signed(tmp_19_cast_cast2_reg_326)? 1'b1: 1'b0);
assign tmp_15_fu_306_p2 = (tmp2_fu_301_p2 | extLd_reg_375);
assign tmp_16_fu_226_p2 = (i_load_reg_136 + ap_const_lv4_1);
assign tmp_19_cast_cast2_fu_189_p1 = $unsigned(tmp_7_fu_179_p2);
assign tmp_19_cast_cast_fu_193_p1 = $unsigned(tmp_7_fu_179_p2);
assign tmp_1_fu_197_p1 = $signed(thresholdTable_pos);
assign tmp_4_fu_247_p2 = ($signed(tmp_s_fu_241_p2) < $signed(tmp_12_cast_reg_320)? 1'b1: 1'b0);
assign tmp_5_fu_169_p2 = (mode == ap_const_lv8_2? 1'b1: 1'b0);
assign tmp_7_fu_179_p2 = (pixel_cast4_fu_175_p1 & ap_const_lv16_FF00);
assign tmp_8_fu_252_p0 = minbit_trunc_fu_237_p1;
assign tmp_8_fu_252_p2 = (tmp_8_fu_252_p0 + ap_const_lv25_1FFFFFC);
assign tmp_9_fu_232_p1 = $unsigned(i_load_reg_136);
assign tmp_fu_163_p2 = (mode == ap_const_lv8_1? 1'b1: 1'b0);
assign tmp_s_fu_241_p0 = minbit_trunc_fu_237_p1;
assign tmp_s_fu_241_p2 = (tmp_s_fu_241_p0 + ap_const_lv25_4);
always @ (posedge ap_clk)
begin
    tmp_12_cast_reg_320[15:0] <= 16'b0000000000000000;
    tmp_19_cast_cast2_reg_326[7:0] <= 8'b00000000;
    tmp_19_cast_cast2_reg_326[17:16] <= 2'b00;
    tmp_19_cast_cast_reg_331[7:0] <= 8'b00000000;
    tmp_19_cast_cast_reg_331[16] <= 1'b0;
    tmp_9_reg_348[31:4] <= 28'b0000000000000000000000000000;
    extLd_reg_375[23:16] <= 8'b00000000;
end



endmodule //threshold

