#include "XilinxProjectHandler.h"

#include <fstream>
#include <stdio.h>
#include <stdlib.h>

using namespace std;

XilinxProjectHandler::XilinxProjectHandler(std::string projectName, std::string projectPath){
	this->projectName = projectName;
	this->projectPath = projectPath;
	buildProjectFile(projectPath);
}

void XilinxProjectHandler::buildProjectFile(std::string projectFilePath){

}

void XilinxProjectHandler::addFile(std::string file, bool generatedFile){
	this->usedFiles.push_back(file);
	if(!generatedFile)
		copyFile(file, projectPath);
	else
		filesInProject.push_back(file);
}

void XilinxProjectHandler::copyFile(std::string file, std::string destPath){
	ifstream ifs(file.c_str(), std::ios::binary);
	string fileName = file.substr(file.find_last_of("/")+1,file.size());
	cout<<"copying file name "<<file << " to "<<endl<<destPath + "/" + fileName<<endl;
	ofstream ofs((destPath+"/"+fileName).c_str(), std::ios::binary);
	ofs << ifs.rdbuf();
	ofs.close();
	ifs.close();
	filesInProject.push_back(destPath+"/"+fileName);
}

void XilinxProjectHandler::removeFile(std::string file){

	for(vector<string>::iterator it = usedFiles.begin(); it!= usedFiles.end(); it++){
		if (*it == file){
			usedFiles.erase(it);
			break;
		}
	}
}

void XilinxProjectHandler::generateConfigFiles(){
	string projectFile = projectPath + "/" + projectName + ".prj";
	ofstream prjFile;
	prjFile.open(projectFile.c_str());
	prjFile<<"#This project file was generated by the HardwareReconfiguration API"<<endl;


	for(vector<string>::iterator fileIt = filesInProject.begin(); fileIt!= filesInProject.end(); fileIt++){
		if(fileIt->rfind(".vhd") == fileIt->size() - 4 ||
			 fileIt->rfind(".vhdl") == fileIt->size() - 5)
			prjFile<<"vhdl work "<<*fileIt<<endl;
		else if(fileIt->rfind(".v") == fileIt->size() - 2)
			prjFile<<"verilog work "<<*fileIt<<endl;
//		else
//			prjFile<<*fileIt<<endl;
	}
		

	prjFile.close();

	string optionsFile = projectPath + "/" + projectName + ".opt";
	ofstream optFile;
	optFile.open(optionsFile.c_str());

	optFile<<"#This options file was generated by the HardwareReconfiguration API"<<endl;

	optFile.close();


	this->prjFileName = projectFile;
	this->optFileName = optionsFile;

}

void XilinxProjectHandler::compileProject(){
	
	generateConfigFiles();

	
	char * xflowPath = getenv("XILINX_XFLOW_PATH");
	string xflowCommand(xflowPath);

	chdir(projectPath.c_str());
	xflowCommand += string("/xflow.exe") + string(" -p ") + string(" xc5vlx110tff1136-1 ") + string(" -synth ") +  " xst_mixed.opt ./" + projectName + ".prj";

	system(xflowCommand.c_str());

}

