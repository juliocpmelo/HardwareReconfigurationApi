/*
 * ArchitectureManager.c
 *
 *  Created on: 24.05.2013
 *      Author: Julio
 */

#include "ArchitectureManager.h"
#include <stdio.h>
#include <string.h>

HardwareComponent* getHardwareComponent(ArchitectureManager* architectureManager, const char* componentName){

	ComponentSetNode *actComponentIt = architectureManager->components->first;
	while (actComponentIt != NULL){
		if(strcmp(actComponentIt->comp->instanceName,componentName) == 0)
			return actComponentIt->comp;
		else
			actComponentIt = actComponentIt->next;
	}
	return NULL;
}

HardwareComponent* getHardwareComponent(ArchitectureManager* architectureManager, char* componentName){

	ComponentSetNode *actComponentIt = architectureManager->components->first;
	while (actComponentIt != NULL){
		if(strcmp(actComponentIt->comp->instanceName,componentName) == 0)
			return actComponentIt->comp;
		else
			actComponentIt = actComponentIt->next;
	}
	return NULL;
}

void setPortValue(void* self,const char* componentName, const char* portName, int value){

	ArchitectureManager* selfInstance = (ArchitectureManager*) self;
	HardwareComponent *comp = getHardwareComponent(selfInstance, componentName);
	int portId;
	if (comp!=NULL){

		int retVal = comp->getPortId((char*)portName, &portId);

		selfInstance->hardwareInterface->setRegisterValue(selfInstance->hardwareInterface,portId,value);

	}
	/*translate component name and port name into the register address*/



	//selfInstance->hardwareInterface->setRegisterValue(VIDEO_FILTER_BASEADDR + videoFilter_xAccess, value));

}

int getPortValue(HardwareInterfaceModule_t* self,const char componentName, const char* portName){


}

ArcthiectureManager* createArchitectureManager(){


}
