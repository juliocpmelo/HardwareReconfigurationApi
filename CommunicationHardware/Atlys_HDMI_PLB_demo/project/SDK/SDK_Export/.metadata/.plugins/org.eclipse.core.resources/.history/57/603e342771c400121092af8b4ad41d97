/*
 * ArchitectureManager.c
 *
 *  Created on: 24.05.2013
 *      Author: Julio
 */

#include "ArchitectureManager.h"
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

HardwareComponent* getHardwareComponent(ArchitectureManager* architectureManager, const char* componentName){

	ComponentSetNode *actComponentIt = architectureManager->components->first;
	while (actComponentIt != NULL){
		if(strcmp(actComponentIt->comp->instanceName,componentName) == 0)
			return actComponentIt->comp;
		else
			actComponentIt = actComponentIt->next;
	}
	return NULL;
}

/*sets a port value into a specific component according the architecture*/
void setPortValue(void* self,const char* componentName, const char* portName, int value){

	ArchitectureManager* selfInstance = (ArchitectureManager*) self;
	HardwareComponent *comp = getHardwareComponent(selfInstance, componentName);
	int portId;
	if (comp!=NULL){
		int errorVal = comp->getPortId(portName, &portId);
		if(errorVal == 0)
			selfInstance->hardwareInterface->setRegisterValue(selfInstance->hardwareInterface,portId,value);
	}

}

int getPortValue(void* self,const char *componentName, const char* portName){

	ArchitectureManager* selfInstance = (ArchitectureManager*) self;
	HardwareComponent *comp = getHardwareComponent(selfInstance, componentName);
	int portId;


	if (comp!=NULL){
		int errorVal = comp->getPortId(portName, &portId);
		if(errorVal == 0)
			return selfInstance->hardwareInterface->getRegisterValue(selfInstance->hardwareInterface,portId);
	}
	return 0;
}

ArchitectureManager* createArchitectureManager(){

	ArchitectureManager* archManager = malloc(sizeof(ArchitectureManager));
	archManager->getPortValue = getPortValue;
	archManager->setPortValue = setPortValue;

	return archManager;
}
